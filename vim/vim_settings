""""""""""
" Leader
""""""""""

let mapleader="\\"
if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

if has('nvim')
	let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1
endif

set guicursor+=i:blinkwait0

""""""""""""
" Nerdtree
""""""""""""
let NERDTreeIgnore = ['^\.git$']

let NERDTreeShowHidden=1
let NERDTreeMouseMode=1

let NERDTreeAutoDeleteBuffer=1

""""""""""
" Syntax
""""""""""

au BufNewFile,BufRead vim_* set filetype=vim


""""""""""""
" Syntastic
""""""""""""

let g:syntastic_html_tidy_blocklevel_tags  = [ 'slide' , 'hgroup', 'slides', 'aside', 'footer']

"""""""""""
" undotree
"""""""""""

if has('persistent_undo')
    set undofile                  " Save undo history to file
    set undodir=~/.vim/tmp/undo/  " undo files in folder
    set undolevels=100000         " Maximum number of undos
    set undoreload=100000         " Save complete files for undo on reload if it has less lines than this
endif

noremap <silent> <Leader>j :UndotreeToggle<cr><F37>
